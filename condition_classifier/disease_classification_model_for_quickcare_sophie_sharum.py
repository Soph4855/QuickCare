# -*- coding: utf-8 -*-
"""Disease Classification Model for QuickCare- Sophie Sharum

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/122VfGFTFJGIu13xuLqQhiD1YO6UAykjz

Disease Classification Model
"""

import pandas as pd
import numpy as np
import matplotlib as plt
import pickle
from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeClassifier,_tree
from sklearn.model_selection import cross_val_score

#Training data
training = pd.read_csv('Training.csv')

#Testing data
testing = pd.read_csv('Testing.csv')

y = training['prognosis']

x = training.drop('prognosis', axis = 'columns')

x_train, x_test, y_train, y_test = train_test_split(x, y) #test_size=0.33, random_state=42

x_train = np.array(x_train)
y_train = np.array(y_train)
x_test = np.array(x_test)
y_test = np.array(y_test)

#For testing model and making an example prediction once it has been trained
y_test_final = testing['prognosis']

#To pull features from for final testing
x_test_final = testing.drop('prognosis', axis = 'columns')

#Fitting the model dtc (decision tree classifier)
dtc  = DecisionTreeClassifier()
dtc = dtc.fit(x_train, y_train)

def predict_condition(symptomList):
  condition_prediction = dtc.predict([symptomList])
  return condition_prediction